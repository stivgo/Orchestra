{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Orchestra API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Authentication",
      "description": "Use to login and logout"
    },
    {
      "name": "Collaborators",
      "description": "Use to manage the users who has access to a project and their permissions"
    },
    {
      "name": "Custom Component Templates",
      "description": "Use to manage the Custom Component Templates which will define new Components created by an user in a project"
    },
    {
      "name": "Elements",
      "description": "Use to manage the Elements in a Project"
    },
    {
      "name": "Organizations",
      "description": "Use to manage the Organizations and their members"
    },
    {
      "name": "Pages",
      "description": "Use to manage the Pages in a Section"
    },
    {
      "name": "Projects",
      "description": "Use to manage the Projects of an User"
    },
    {
      "name": "Resources",
      "description": "Use to get the resources which are used in the FrontEnd"
    },
    {
      "name": "Sections",
      "description": "Use to manage the Sections of a Project"
    },
    {
      "name": "Users",
      "description": "Use to manage the Users of the editor"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "token",
      "in": "header",
      "name": "Authorization",
      "description": "The authorization is managed by a JWT Token provided on User login"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/${ENTITY_ROUTE}/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Log in for a User",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User email and password.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UserId and JWT Token"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Log out for a User",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success message"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/{elementId}": {
      "get": {
        "tags": [
          "Elements"
        ],
        "description": "Find a Element by their Id",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "elementId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Searched Element"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "Elements"
        ],
        "description": "Delete a Element from a Page",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "elementId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success message"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Creates a User",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created User, without password"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update a User in a Project, it not allows to update the password or the email by this endpoint",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated User information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success message"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}": {
      "post": {
        "tags": [
          "Sections"
        ],
        "description": "Creates a Section in a Project",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Section information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SectionCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created Section"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "put": {
        "tags": [
          "Sections"
        ],
        "description": "Update a Section in a Project",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated Section information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SectionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success message"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/{pageId}": {
      "get": {
        "tags": [
          "Pages"
        ],
        "description": "Find a Page by its id into a Section and a Project",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Searched Page"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "Pages"
        ],
        "description": "Delete a Page from a Project and the Section, also deletes all Elements that belong to the Page",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success message"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/{sectionId}": {
      "get": {
        "tags": [
          "Sections"
        ],
        "description": "Find a Section by its id in a Project",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Searched Section"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "Sections"
        ],
        "description": "Delete a Section from a Project, also delete the Pages inside it",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success message"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Find a Project by its id",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Searched Project"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "description": "Delete a Project and its content (sections, pages, elements, etc)",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success message"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/{projectId}/export": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Returns the whole information of a project into a single JSON object",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON object of the Project"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Find a User by its id",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Searched User, without password"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete a User, also delete all other resources related to the user",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success message"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/{organizationId}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "description": "Find a Organization by their Id",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Searched Organization"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "Organizations"
        ],
        "description": "Delete a Organization from a Project",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success message"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/{organizationId}/users/{usermail}": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "description": "Add an User as member of the Organization by its email",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "usermail",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success message"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/{organizationId}/users/{userId}": {
      "delete": {
        "tags": [
          "Organizations"
        ],
        "description": "Removes an User from an Organization",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success message"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/styles": {
      "get": {
        "tags": [
          "Resources"
        ],
        "description": "Return all css styles that can be used in a element",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Styles string list"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/{templateId}": {
      "get": {
        "tags": [
          "Custom Component Templates"
        ],
        "description": "Find a Custom Component Template by Id",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Searched Custom Component Template"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "Custom Component Templates"
        ],
        "description": "Delete a Custom Component Template",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success message"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/${ENTITY_ROUTE}/{templateId}/elements/": {
      "get": {
        "tags": [
          "Custom Component Templates"
        ],
        "description": "Find the Elemenets which belong to a specific Custom Component Template",
        "parameters": [
          {
            "name": "ENTITY_ROUTE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Elements list"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "definitions": {
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "johngonzalez@javeriana.edu.co"
        },
        "password": {
          "type": "string",
          "example": "miContrasena123"
        }
      }
    },
    "Collaborator": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "example": "Auxiliar"
        },
        "permissions": {
          "type": "array",
          "example": [
            "Watch project"
          ],
          "items": {
            "type": "string"
          }
        },
        "userId": {
          "type": "string",
          "example": "612fa93cc6c2d02e80dc9687"
        }
      }
    },
    "CustomComponentTemplateCreate": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string",
          "example": "612dac3c10a1b91448473466"
        },
        "name": {
          "type": "string",
          "example": "Tarjeta De Presentación"
        },
        "description": {
          "type": "string",
          "example": "Muestra la información básica de una persona"
        },
        "defaultWidth": {
          "type": "number",
          "example": 20
        },
        "defaultHeight": {
          "type": "number",
          "example": 40
        },
        "childComponents": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "Paragraph"
              },
              "title": {
                "type": "string",
                "example": "Descripción de la Persona"
              },
              "description": {
                "type": "string",
                "example": "Breve resumen de la información de la persona presentada en la Tarjeta"
              },
              "xPosition": {
                "type": "number",
                "example": 0.5
              },
              "yPosition": {
                "type": "number",
                "example": 10
              },
              "zPosition": {
                "type": "number",
                "example": 1
              },
              "width": {
                "type": "number",
                "example": 20
              },
              "height": {
                "type": "number",
                "example": 20
              },
              "startTime": {
                "type": "number",
                "example": 1000
              },
              "endTime": {
                "type": "number",
                "example": 60000
              },
              "isSelected": {
                "type": "boolean",
                "example": true
              },
              "isActive": {
                "type": "boolean",
                "example": true
              },
              "isVisible": {
                "type": "boolean",
                "example": false
              },
              "events": {
                "type": "array",
                "example": [],
                "items": {}
              },
              "styles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "property": {
                      "type": "string",
                      "example": "color"
                    },
                    "value": {
                      "type": "string",
                      "example": "black"
                    }
                  }
                }
              },
              "isStatic": {
                "type": "boolean",
                "example": true
              },
              "urlSource": {
                "type": "string",
                "example": ""
              },
              "content": {
                "type": "string",
                "example": "Emanuel Alvarez es un estudiante de Ingenieria de Sistemas"
              },
              "isLocked": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      }
    },
    "CustomComponentTemplateUpdate": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61707b563a57271d28710f2c"
        },
        "projectId": {
          "type": "string",
          "example": "612dac3c10a1b91448473466"
        },
        "name": {
          "type": "string",
          "example": "Tarjeta De Presentación"
        },
        "description": {
          "type": "string",
          "example": "Muestra la información básica de una persona"
        },
        "defaultWidth": {
          "type": "number",
          "example": 20
        },
        "defaultHeight": {
          "type": "number",
          "example": 40
        },
        "childComponents": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "Paragraph"
              },
              "title": {
                "type": "string",
                "example": "Descripción de la Persona"
              },
              "description": {
                "type": "string",
                "example": "Breve resumen de la información de la persona presentada en la Tarjeta"
              },
              "xPosition": {
                "type": "number",
                "example": 0.5
              },
              "yPosition": {
                "type": "number",
                "example": 10
              },
              "zPosition": {
                "type": "number",
                "example": 1
              },
              "width": {
                "type": "number",
                "example": 20
              },
              "height": {
                "type": "number",
                "example": 20
              },
              "startTime": {
                "type": "number",
                "example": 1000
              },
              "endTime": {
                "type": "number",
                "example": 60000
              },
              "isSelected": {
                "type": "boolean",
                "example": true
              },
              "isActive": {
                "type": "boolean",
                "example": true
              },
              "isVisible": {
                "type": "boolean",
                "example": false
              },
              "events": {
                "type": "array",
                "example": [],
                "items": {}
              },
              "styles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "property": {
                      "type": "string",
                      "example": "color"
                    },
                    "value": {
                      "type": "string",
                      "example": "black"
                    }
                  }
                }
              },
              "isStatic": {
                "type": "boolean",
                "example": true
              },
              "urlSource": {
                "type": "string",
                "example": ""
              },
              "content": {
                "type": "string",
                "example": "Emanuel Alvarez es un estudiante de Ingenieria de Sistemas"
              },
              "isLocked": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      }
    },
    "ElementCreate": {
      "type": "object",
      "properties": {
        "pageId": {
          "type": "string",
          "example": "61311fbe2b8de30d98785db4"
        },
        "type": {
          "type": "string",
          "example": "Layer"
        },
        "title": {
          "type": "string",
          "example": "Capa Principal"
        },
        "description": {
          "type": "string",
          "example": "Capa que contiene los datos principales de una pagina"
        },
        "xPosition": {
          "type": "number",
          "example": 0
        },
        "yPosition": {
          "type": "number",
          "example": 0
        },
        "zPosition": {
          "type": "number",
          "example": 1
        },
        "width": {
          "type": "number",
          "example": 100
        },
        "height": {
          "type": "number",
          "example": 100
        },
        "startTime": {
          "type": "number",
          "example": 0
        },
        "endTime": {
          "type": "number",
          "example": 600000
        },
        "isSelected": {
          "type": "boolean",
          "example": true
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "isVisible": {
          "type": "boolean",
          "example": false
        },
        "events": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "styles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "property": {
                "type": "string",
                "example": "display"
              },
              "value": {
                "type": "string",
                "example": "flex"
              }
            }
          }
        },
        "isLocked": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "ElementUpdate": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61707b563a57271d28710f2c"
        },
        "pageId": {
          "type": "string",
          "example": "61311fbe2b8de30d98785db4"
        },
        "type": {
          "type": "string",
          "example": "Layer"
        },
        "title": {
          "type": "string",
          "example": "Capa Principal"
        },
        "description": {
          "type": "string",
          "example": "Capa que contiene los datos principales de una pagina"
        },
        "xPosition": {
          "type": "number",
          "example": 0
        },
        "yPosition": {
          "type": "number",
          "example": 0
        },
        "zPosition": {
          "type": "number",
          "example": 1
        },
        "width": {
          "type": "number",
          "example": 100
        },
        "height": {
          "type": "number",
          "example": 100
        },
        "startTime": {
          "type": "number",
          "example": 0
        },
        "endTime": {
          "type": "number",
          "example": 600000
        },
        "isSelected": {
          "type": "boolean",
          "example": true
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "isVisible": {
          "type": "boolean",
          "example": false
        },
        "events": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "styles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "property": {
                "type": "string",
                "example": "display"
              },
              "value": {
                "type": "string",
                "example": "flex"
              }
            }
          }
        },
        "isLocked": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "OrganizationCreate": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "example": "Colombia"
        },
        "facebookUrl": {
          "type": "string",
          "example": "www.facebook.com/TesosTV/"
        },
        "name": {
          "type": "string",
          "example": "OrchestaOrgDevelopmentTest"
        },
        "nit": {
          "type": "string",
          "example": "122233445677-2"
        },
        "phoneNumber": {
          "type": "string",
          "example": "+57 3176653321"
        },
        "twitterUrl": {
          "type": "string",
          "example": "www.twitter.com/TesosTV/"
        },
        "website": {
          "type": "string",
          "example": "https://github.com/TesosTV/"
        }
      }
    },
    "OrganizationUpdate": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61707b563a57271d28710f2c"
        },
        "country": {
          "type": "string",
          "example": "Colombia"
        },
        "facebookUrl": {
          "type": "string",
          "example": "www.facebook.com/TesosTV/"
        },
        "name": {
          "type": "string",
          "example": "OrchestaOrgDevelopmentTest"
        },
        "nit": {
          "type": "string",
          "example": "122233445677-2"
        },
        "phoneNumber": {
          "type": "string",
          "example": "+57 3176653321"
        },
        "twitterUrl": {
          "type": "string",
          "example": "www.twitter.com/TesosTV/"
        },
        "website": {
          "type": "string",
          "example": "https://github.com/TesosTV/"
        }
      }
    },
    "PageCreate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Página Introductoria"
        },
        "description": {
          "type": "string",
          "example": "Página con la información de presentación del proyecto"
        },
        "number": {
          "type": "number",
          "example": 1
        },
        "startTime": {
          "type": "number",
          "example": 0
        },
        "endTime": {
          "type": "number",
          "example": 100000
        }
      }
    },
    "PageUpdate": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61707b563a57271d28710f2c"
        },
        "name": {
          "type": "string",
          "example": "Página Introductoria"
        },
        "description": {
          "type": "string",
          "example": "Página con la información de presentación del proyecto"
        },
        "number": {
          "type": "number",
          "example": 1
        },
        "startTime": {
          "type": "number",
          "example": 0
        },
        "endTime": {
          "type": "number",
          "example": 100000
        }
      }
    },
    "ProjectCreate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Primer Proyecto HbbTV"
        },
        "description": {
          "type": "string",
          "example": "Primera aplicación HbbTV de prueba"
        },
        "organizationId": {
          "type": "string",
          "example": "612da1c0bcc07c40945b2ccc"
        }
      }
    },
    "ProjectUpdate": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61707b563a57271d28710f2c"
        },
        "version": {
          "type": "number",
          "example": 2
        },
        "name": {
          "type": "string",
          "example": "Primer Proyecto HbbTV"
        },
        "description": {
          "type": "string",
          "example": "Primera aplicación HbbTV de prueba"
        },
        "organizationId": {
          "type": "string",
          "example": "612da1c0bcc07c40945b2ccc"
        }
      }
    },
    "SectionCreate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Primera Sección del Programa"
        },
        "number": {
          "type": "number",
          "example": 1
        },
        "startTime": {
          "type": "number",
          "example": 20
        },
        "endTime": {
          "type": "number",
          "example": 700000
        }
      }
    },
    "SectionUpdate": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61707b563a57271d28710f2c"
        },
        "name": {
          "type": "string",
          "example": "Primera Sección del Programa"
        },
        "number": {
          "type": "number",
          "example": 1
        },
        "startTime": {
          "type": "number",
          "example": 20
        },
        "endTime": {
          "type": "number",
          "example": 700000
        }
      }
    },
    "UserCreate": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Stiven"
        },
        "lastName": {
          "type": "string",
          "example": "Gonzalez"
        },
        "email": {
          "type": "string",
          "example": "stivenGonzalez@javeriana.edu.co"
        },
        "password": {
          "type": "string",
          "example": "miContrasena123"
        }
      }
    },
    "UserUpdate": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "612d8efe7f21fa339c89ce5f"
        },
        "firstName": {
          "type": "string",
          "example": "Stiven"
        },
        "lastName": {
          "type": "string",
          "example": "Gonzalez O"
        }
      }
    }
  }
}